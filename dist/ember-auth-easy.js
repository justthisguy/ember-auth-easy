;(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var Appx;

  Appx = {};

  Appx.Auth = Em.Auth.create({
    signInEndPoint: '/users/sign_in.json',
    signOutEndPoint: '/logout',
    userModel: 'App.User',
    tokenKey: "auth_token",
    tokenIdKey: "user_id",
    sessionAdapter: 'cookie',
    modules: ['emberData', 'rememberable'],
    rememberable: {
      tokenKey: 'auth_token',
      period: 14,
      autoRecall: true
    }
  });

  Appx.Auth.on("signInSuccess", function() {
    console.debug("signed in");
    return setTimeout(function() {
      var c, classes, _i, _len, _results;
      classes = App.get('userRefreshClasses');
      if (classes) {
        _results = [];
        for (_i = 0, _len = classes.length; _i < _len; _i++) {
          c = classes[_i];
          _results.push(c.find());
        }
        return _results;
      }
    }, 1000);
  });

  Appx.Auth.on('signInError', function(a) {
    var resp;
    resp = App.Auth.get('response');
    return alert("sign in error " + resp);
  });

  module.exports = Appx;

}).call(this);

},{}],2:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var Appx;

  Appx = {};

  Appx.SignInController = Em.ObjectController.extend({
    init: function() {
      this._super();
      return this.set("content", Em.Object.create());
    },
    login: function() {
      App.Auth.signIn({
        data: {
          "email": this.get('email'),
          "password": this.get('password')
        }
      });
      return console.debug('here place');
    },
    double: function(x) {
      return x * 2;
    },
    dropboxUrl: (function() {
      return "" + (App.getServerUrl()) + "/users/auth/dropbox";
    }).property()
  });

  Appx.SignOutController = Em.ObjectController.extend({
    init: function() {
      this._super();
      return this.set("content", Em.Object.create());
    },
    logout: function() {
      console.debug("logout");
      App.Auth.get("_session").clear();
      return App.Auth.trigger("signOutSuccess");
    }
  });

  module.exports = Appx;

}).call(this);

},{}],3:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var auth, possAct;

  possAct = function(f) {
    if (typeof Em === 'undefined') {
      return f;
    } else {
      return f();
    }
  };

  auth = {
    foo: function() {
      return 14;
    },
    double: function(x) {
      return x * 2;
    },
    controllers: possAct(function() {
      return require("./controllers/sign_in");
    }),
    models: possAct(function() {
      return require("./models/user");
    }),
    Auth: possAct(function() {
      return require("./auth_setup");
    }),
    setupApp: function(app) {
      app.User = this.models.User;
      app.SignInController = this.controllers.SignInController;
      app.SignOutController = this.controllers.SignOutController;
      app.Auth = this.Auth.Auth;
      return require("./templates");
    }
  };

  if (typeof window !== 'undefined') {
    window.EmberAuth = auth;
  }

  module.exports = auth;

}).call(this);

},{"./auth_setup":1,"./controllers/sign_in":2,"./models/user":4,"./templates":5}],4:[function(require,module,exports){
// Generated by CoffeeScript 1.6.3
(function() {
  var Appx;

  Appx = {};

  Appx.User = DS.Model.extend({
    email: DS.attr('string'),
    authentication_token: DS.attr('string'),
    providers: DS.attr("hash")
  });

  Appx.User.reopenClass({
    double: function(x) {
      return x * 2;
    }
  });

  Appx.User.FIXTURES = [
    {
      id: 1,
      email: "mharris717@gmail.com"
    }
  ];

  module.exports = Appx;

}).call(this);

},{}],5:[function(require,module,exports){
Em.TEMPLATES['_user_status'] = Em.Handlebars.compile('{{#if App.Auth.signedIn}}   Signed In as {{App.Auth.user.email}}   {{render sign_out}} {{else}}   {{render sign_in}} {{/if}}');

Em.TEMPLATES['sign_in'] = Em.Handlebars.compile('<form class="form-inline">   {{#if showLoginForm}}     {{view Em.TextField valueBinding="email" placeholder="Email"}}     {{view Em.TextField valueBinding="password" placeholder="Password"}}     <button {{action "login"}}>Login</button>   {{/if}}    <a {{bindAttr href="dropboxUrl"}}>Login with Dropbox</a> </form>');

Em.TEMPLATES['sign_out'] = Em.Handlebars.compile('<a href="#" {{action "logout"}}>Logout</a> {{#if App.Auth.user.providers.fatsecret}}    {{else}}   {{#if App.useFatSecret}}     <a {{bindAttr href="fatsecretUrl"}}>Connect FatSecret</a>   {{/if}} {{/if}}');


},{}]},{},[3])
;